{"ast":null,"code":"import axios from \"axios\";\nconst apiKey = \"233bf66f6557a07947e7ff65024c45d0\";\nconst url = \"https://api.themoviedb.org/3\";\nconst topratedUrl = `${url}/movie/top_rated`;\nconst img = \"https://image.tmdb.org/t/p/w1280/\";\nexport const category = {\n  movie: \"movie\",\n  tv: \"tv\"\n};\nexport const tvType = {\n  popular: \"popular\",\n  topRated: \"top_rated\",\n  on_the_iar: \"on_the_iar\"\n};\nexport const movieType = {\n  upcomig: \"upcomig\",\n  popular: \"popular\",\n  top_rated: \"top_rated\"\n};\nexport const getTopRated = async () => {\n  const {\n    data\n  } = await axios.get(topratedUrl, {\n    params: {\n      api_key: apiKey,\n      page: 1\n    }\n  });\n  const modifiedData = data.results.map(m => ({\n    id: m[\"id\"],\n    backPoster: img + m[\"backdrop_path\"],\n    popularity: m[\"popularith\"],\n    title: m[\"title\"],\n    poster: img + m[\"poster_path\"],\n    overview: m[\"overview\"],\n    rating: m[\"vote_average\"]\n  }));\n  return modifiedData;\n};\nexport const getMoviesList = async (category, page) => {\n  const movieList = `${url}/${category}/popular`;\n  const {\n    data\n  } = await axios.get(movieList, {\n    params: {\n      api_key: apiKey,\n      page: page\n    }\n  });\n  return data;\n};\nexport const getSimilarList = async (category, id) => {\n  const movieList = `${url}/${category}/${id}/similar`;\n  const {\n    data\n  } = await axios.get(movieList, {\n    params: {\n      api_key: apiKey,\n      page: 1\n    }\n  });\n  return data;\n};\nexport const getGenreList = async category => {\n  const genreList = `${url}/genre/${category}/list`;\n  const {\n    data\n  } = await axios.get(genreList, {\n    params: {\n      api_key: apiKey\n    }\n  });\n  const modifiedData = data.genres.map(g => ({\n    id: g[\"id\"],\n    name: g[\"name\"]\n  }));\n  return modifiedData;\n};\nexport const getMoviesByGenreList = async (category, genre_id) => {\n  const genreList = `${url}/discover/${category}`;\n  const {\n    data\n  } = await axios.get(genreList, {\n    params: {\n      api_key: apiKey,\n      page: 1,\n      with_genres: genre_id\n    }\n  }); // const modifiedData = data.results.map((m) => ({\n  //   id: m[\"id\"],\n  //   backPoster: img + m[\"backdrop_path\"],\n  //   popularity: m[\"popularith\"],\n  //   title: m[\"title\"],\n  //   poster: img + m[\"poster_path\"],\n  //   overview: m[\"overview\"],\n  //   rating: m[\"vote_average\"],\n  // }));\n\n  return data;\n};\nexport const getMoviesSearch = async (category, query, page) => {\n  const movieSearch = `${url}/search/${category}`;\n  const {\n    data\n  } = await axios.get(movieSearch, {\n    params: {\n      api_key: apiKey,\n      query: query,\n      page: page\n    }\n  });\n  return data;\n};\nexport const getMovieDetail = async (category, id) => {\n  const {\n    data\n  } = await axios.get(`${url}/${category}/${id}`, {\n    params: {\n      api_key: apiKey\n    }\n  });\n  return data;\n};\nexport const getMovieVideos = async (category, id) => {\n  const {\n    data\n  } = await axios.get(`${url}/${category}/${id}/videos`, {\n    params: {\n      api_key: apiKey\n    }\n  });\n  return data.results;\n};","map":{"version":3,"names":["axios","apiKey","url","topratedUrl","img","category","movie","tv","tvType","popular","topRated","on_the_iar","movieType","upcomig","top_rated","getTopRated","data","get","params","api_key","page","modifiedData","results","map","m","id","backPoster","popularity","title","poster","overview","rating","getMoviesList","movieList","getSimilarList","getGenreList","genreList","genres","g","name","getMoviesByGenreList","genre_id","with_genres","getMoviesSearch","query","movieSearch","getMovieDetail","getMovieVideos"],"sources":["/Users/sergeygvozdetskiy/Desktop/movie-app/movie-app/src/api/apiConfig.js"],"sourcesContent":["import axios from \"axios\";\n\nconst apiKey = \"233bf66f6557a07947e7ff65024c45d0\";\nconst url = \"https://api.themoviedb.org/3\";\nconst topratedUrl = `${url}/movie/top_rated`;\nconst img = \"https://image.tmdb.org/t/p/w1280/\";\n\nexport const category = {\n  movie: \"movie\",\n  tv: \"tv\",\n};\n\nexport const tvType = {\n  popular: \"popular\",\n  topRated: \"top_rated\",\n  on_the_iar: \"on_the_iar\",\n};\n\nexport const movieType = {\n  upcomig: \"upcomig\",\n  popular: \"popular\",\n  top_rated: \"top_rated\",\n};\n\nexport const getTopRated = async () => {\n  const { data } = await axios.get(topratedUrl, {\n    params: {\n      api_key: apiKey,\n      page: 1,\n    },\n  });\n\n  const modifiedData = data.results.map((m) => ({\n    id: m[\"id\"],\n    backPoster: img + m[\"backdrop_path\"],\n    popularity: m[\"popularith\"],\n    title: m[\"title\"],\n    poster: img + m[\"poster_path\"],\n    overview: m[\"overview\"],\n    rating: m[\"vote_average\"],\n  }));\n\n  return modifiedData;\n};\n\nexport const getMoviesList = async (category, page) => {\n  const movieList = `${url}/${category}/popular`;\n  const { data } = await axios.get(movieList, {\n    params: {\n      api_key: apiKey,\n      page: page,\n    },\n  });\n\n  return data;\n};\n\nexport const getSimilarList = async (category, id) => {\n  const movieList = `${url}/${category}/${id}/similar`;\n  const { data } = await axios.get(movieList, {\n    params: {\n      api_key: apiKey,\n      page: 1,\n    },\n  });\n\n  return data;\n};\n\nexport const getGenreList = async (category) => {\n  const genreList = `${url}/genre/${category}/list`;\n  const { data } = await axios.get(genreList, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n\n  const modifiedData = data.genres.map((g) => ({\n    id: g[\"id\"],\n    name: g[\"name\"],\n  }));\n  return modifiedData;\n};\n\nexport const getMoviesByGenreList = async (category, genre_id) => {\n  const genreList = `${url}/discover/${category}`;\n  const { data } = await axios.get(genreList, {\n    params: {\n      api_key: apiKey,\n      page: 1,\n      with_genres: genre_id,\n    },\n  });\n\n  // const modifiedData = data.results.map((m) => ({\n  //   id: m[\"id\"],\n  //   backPoster: img + m[\"backdrop_path\"],\n  //   popularity: m[\"popularith\"],\n  //   title: m[\"title\"],\n  //   poster: img + m[\"poster_path\"],\n  //   overview: m[\"overview\"],\n  //   rating: m[\"vote_average\"],\n  // }));\n  return data;\n};\n\nexport const getMoviesSearch = async (category, query, page) => {\n  const movieSearch = `${url}/search/${category}`;\n  const { data } = await axios.get(movieSearch, {\n    params: {\n      api_key: apiKey,\n      query: query,\n      page: page,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieDetail = async (category, id) => {\n  const { data } = await axios.get(`${url}/${category}/${id}`, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n  return data;\n};\n\nexport const getMovieVideos = async (category, id) => {\n  const { data } = await axios.get(`${url}/${category}/${id}/videos`, {\n    params: {\n      api_key: apiKey,\n    },\n  });\n  return data.results;\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAG,kCAAf;AACA,MAAMC,GAAG,GAAG,8BAAZ;AACA,MAAMC,WAAW,GAAI,GAAED,GAAI,kBAA3B;AACA,MAAME,GAAG,GAAG,mCAAZ;AAEA,OAAO,MAAMC,QAAQ,GAAG;EACtBC,KAAK,EAAE,OADe;EAEtBC,EAAE,EAAE;AAFkB,CAAjB;AAKP,OAAO,MAAMC,MAAM,GAAG;EACpBC,OAAO,EAAE,SADW;EAEpBC,QAAQ,EAAE,WAFU;EAGpBC,UAAU,EAAE;AAHQ,CAAf;AAMP,OAAO,MAAMC,SAAS,GAAG;EACvBC,OAAO,EAAE,SADc;EAEvBJ,OAAO,EAAE,SAFc;EAGvBK,SAAS,EAAE;AAHY,CAAlB;AAMP,OAAO,MAAMC,WAAW,GAAG,YAAY;EACrC,MAAM;IAAEC;EAAF,IAAW,MAAMhB,KAAK,CAACiB,GAAN,CAAUd,WAAV,EAAuB;IAC5Ce,MAAM,EAAE;MACNC,OAAO,EAAElB,MADH;MAENmB,IAAI,EAAE;IAFA;EADoC,CAAvB,CAAvB;EAOA,MAAMC,YAAY,GAAGL,IAAI,CAACM,OAAL,CAAaC,GAAb,CAAkBC,CAAD,KAAQ;IAC5CC,EAAE,EAAED,CAAC,CAAC,IAAD,CADuC;IAE5CE,UAAU,EAAEtB,GAAG,GAAGoB,CAAC,CAAC,eAAD,CAFyB;IAG5CG,UAAU,EAAEH,CAAC,CAAC,YAAD,CAH+B;IAI5CI,KAAK,EAAEJ,CAAC,CAAC,OAAD,CAJoC;IAK5CK,MAAM,EAAEzB,GAAG,GAAGoB,CAAC,CAAC,aAAD,CAL6B;IAM5CM,QAAQ,EAAEN,CAAC,CAAC,UAAD,CANiC;IAO5CO,MAAM,EAAEP,CAAC,CAAC,cAAD;EAPmC,CAAR,CAAjB,CAArB;EAUA,OAAOH,YAAP;AACD,CAnBM;AAqBP,OAAO,MAAMW,aAAa,GAAG,OAAO3B,QAAP,EAAiBe,IAAjB,KAA0B;EACrD,MAAMa,SAAS,GAAI,GAAE/B,GAAI,IAAGG,QAAS,UAArC;EACA,MAAM;IAAEW;EAAF,IAAW,MAAMhB,KAAK,CAACiB,GAAN,CAAUgB,SAAV,EAAqB;IAC1Cf,MAAM,EAAE;MACNC,OAAO,EAAElB,MADH;MAENmB,IAAI,EAAEA;IAFA;EADkC,CAArB,CAAvB;EAOA,OAAOJ,IAAP;AACD,CAVM;AAYP,OAAO,MAAMkB,cAAc,GAAG,OAAO7B,QAAP,EAAiBoB,EAAjB,KAAwB;EACpD,MAAMQ,SAAS,GAAI,GAAE/B,GAAI,IAAGG,QAAS,IAAGoB,EAAG,UAA3C;EACA,MAAM;IAAET;EAAF,IAAW,MAAMhB,KAAK,CAACiB,GAAN,CAAUgB,SAAV,EAAqB;IAC1Cf,MAAM,EAAE;MACNC,OAAO,EAAElB,MADH;MAENmB,IAAI,EAAE;IAFA;EADkC,CAArB,CAAvB;EAOA,OAAOJ,IAAP;AACD,CAVM;AAYP,OAAO,MAAMmB,YAAY,GAAG,MAAO9B,QAAP,IAAoB;EAC9C,MAAM+B,SAAS,GAAI,GAAElC,GAAI,UAASG,QAAS,OAA3C;EACA,MAAM;IAAEW;EAAF,IAAW,MAAMhB,KAAK,CAACiB,GAAN,CAAUmB,SAAV,EAAqB;IAC1ClB,MAAM,EAAE;MACNC,OAAO,EAAElB;IADH;EADkC,CAArB,CAAvB;EAMA,MAAMoB,YAAY,GAAGL,IAAI,CAACqB,MAAL,CAAYd,GAAZ,CAAiBe,CAAD,KAAQ;IAC3Cb,EAAE,EAAEa,CAAC,CAAC,IAAD,CADsC;IAE3CC,IAAI,EAAED,CAAC,CAAC,MAAD;EAFoC,CAAR,CAAhB,CAArB;EAIA,OAAOjB,YAAP;AACD,CAbM;AAeP,OAAO,MAAMmB,oBAAoB,GAAG,OAAOnC,QAAP,EAAiBoC,QAAjB,KAA8B;EAChE,MAAML,SAAS,GAAI,GAAElC,GAAI,aAAYG,QAAS,EAA9C;EACA,MAAM;IAAEW;EAAF,IAAW,MAAMhB,KAAK,CAACiB,GAAN,CAAUmB,SAAV,EAAqB;IAC1ClB,MAAM,EAAE;MACNC,OAAO,EAAElB,MADH;MAENmB,IAAI,EAAE,CAFA;MAGNsB,WAAW,EAAED;IAHP;EADkC,CAArB,CAAvB,CAFgE,CAUhE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACA,OAAOzB,IAAP;AACD,CApBM;AAsBP,OAAO,MAAM2B,eAAe,GAAG,OAAOtC,QAAP,EAAiBuC,KAAjB,EAAwBxB,IAAxB,KAAiC;EAC9D,MAAMyB,WAAW,GAAI,GAAE3C,GAAI,WAAUG,QAAS,EAA9C;EACA,MAAM;IAAEW;EAAF,IAAW,MAAMhB,KAAK,CAACiB,GAAN,CAAU4B,WAAV,EAAuB;IAC5C3B,MAAM,EAAE;MACNC,OAAO,EAAElB,MADH;MAEN2C,KAAK,EAAEA,KAFD;MAGNxB,IAAI,EAAEA;IAHA;EADoC,CAAvB,CAAvB;EAQA,OAAOJ,IAAP;AACD,CAXM;AAaP,OAAO,MAAM8B,cAAc,GAAG,OAAOzC,QAAP,EAAiBoB,EAAjB,KAAwB;EACpD,MAAM;IAAET;EAAF,IAAW,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEf,GAAI,IAAGG,QAAS,IAAGoB,EAAG,EAAnC,EAAsC;IAC3DP,MAAM,EAAE;MACNC,OAAO,EAAElB;IADH;EADmD,CAAtC,CAAvB;EAKA,OAAOe,IAAP;AACD,CAPM;AASP,OAAO,MAAM+B,cAAc,GAAG,OAAO1C,QAAP,EAAiBoB,EAAjB,KAAwB;EACpD,MAAM;IAAET;EAAF,IAAW,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEf,GAAI,IAAGG,QAAS,IAAGoB,EAAG,SAAnC,EAA6C;IAClEP,MAAM,EAAE;MACNC,OAAO,EAAElB;IADH;EAD0D,CAA7C,CAAvB;EAKA,OAAOe,IAAI,CAACM,OAAZ;AACD,CAPM"},"metadata":{},"sourceType":"module"}